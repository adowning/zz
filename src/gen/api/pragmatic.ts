/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Tasks API
 * OpenAPI spec version: 0.0.0
 */
import type {
  PostApiGs2cGeV3GameService200,
  PostApiGs2cGeV3GameService500
} from '../models';

import { customFetch } from '../../request/index';


/**
 * @summary Get pragmatic settings for a game
 */
export type postApiGs2cGeV3GameServiceResponse200 = {
  data: PostApiGs2cGeV3GameService200
  status: 200
}

export type postApiGs2cGeV3GameServiceResponse500 = {
  data: PostApiGs2cGeV3GameService500
  status: 500
}
    
export type postApiGs2cGeV3GameServiceResponseComposite = postApiGs2cGeV3GameServiceResponse200 | postApiGs2cGeV3GameServiceResponse500;
    
export type postApiGs2cGeV3GameServiceResponse = postApiGs2cGeV3GameServiceResponseComposite & {
  headers: Headers;
}

export const getPostApiGs2cGeV3GameServiceUrl = () => {


  

  return `/api/gs2c/ge/v3/gameService`
}

export const postApiGs2cGeV3GameService = async (postApiGs2cGeV3GameServiceBody: unknown, options?: RequestInit): Promise<postApiGs2cGeV3GameServiceResponse> => {
  
  return customFetch<postApiGs2cGeV3GameServiceResponse>(getPostApiGs2cGeV3GameServiceUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      postApiGs2cGeV3GameServiceBody,)
  }
);}


