/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Tasks API
 * OpenAPI spec version: 0.0.0
 */
import type {
  GetApiOperators200Item,
  GetApiOperatorsProducts200
} from '../models';

import { customFetch } from '../../request/index';


/**
 * @summary Get all operators
 */
export type getApiOperatorsResponse200 = {
  data: GetApiOperators200Item[]
  status: 200
}

export type getApiOperatorsResponse401 = {
  data: null
  status: 401
}
    
export type getApiOperatorsResponseComposite = getApiOperatorsResponse200 | getApiOperatorsResponse401;
    
export type getApiOperatorsResponse = getApiOperatorsResponseComposite & {
  headers: Headers;
}

export const getGetApiOperatorsUrl = () => {


  

  return `/api/operators`
}

export const getApiOperators = async ( options?: RequestInit): Promise<getApiOperatorsResponse> => {
  
  return customFetch<getApiOperatorsResponse>(getGetApiOperatorsUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * @summary Get all products for the current users operator
 */
export type getApiOperatorsProductsResponse200 = {
  data: GetApiOperatorsProducts200
  status: 200
}

export type getApiOperatorsProductsResponse401 = {
  data: null
  status: 401
}
    
export type getApiOperatorsProductsResponseComposite = getApiOperatorsProductsResponse200 | getApiOperatorsProductsResponse401;
    
export type getApiOperatorsProductsResponse = getApiOperatorsProductsResponseComposite & {
  headers: Headers;
}

export const getGetApiOperatorsProductsUrl = () => {


  

  return `/api/operators/products`
}

export const getApiOperatorsProducts = async ( options?: RequestInit): Promise<getApiOperatorsProductsResponse> => {
  
  return customFetch<getApiOperatorsProductsResponse>(getGetApiOperatorsProductsUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


