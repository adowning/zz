/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Tasks API
 * OpenAPI spec version: 0.0.0
 */
import type {
  GetApiReferralCode200Item,
  GetApiReferralCodeStatus200,
  PostApiReferralCodeBody
} from '../models';

import { customFetch } from '../../request/index';


export type getApiReferralCodeStatusResponse200 = {
  data: GetApiReferralCodeStatus200
  status: 200
}
    
export type getApiReferralCodeStatusResponseComposite = getApiReferralCodeStatusResponse200;
    
export type getApiReferralCodeStatusResponse = getApiReferralCodeStatusResponseComposite & {
  headers: Headers;
}

export const getGetApiReferralCodeStatusUrl = () => {


  

  return `/api/referral-code/status`
}

export const getApiReferralCodeStatus = async ( options?: RequestInit): Promise<getApiReferralCodeStatusResponse> => {
  
  return customFetch<getApiReferralCodeStatusResponse>(getGetApiReferralCodeStatusUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


export type getApiReferralCodeResponse200 = {
  data: GetApiReferralCode200Item[]
  status: 200
}
    
export type getApiReferralCodeResponseComposite = getApiReferralCodeResponse200;
    
export type getApiReferralCodeResponse = getApiReferralCodeResponseComposite & {
  headers: Headers;
}

export const getGetApiReferralCodeUrl = () => {


  

  return `/api/referral-code`
}

export const getApiReferralCode = async ( options?: RequestInit): Promise<getApiReferralCodeResponse> => {
  
  return customFetch<getApiReferralCodeResponse>(getGetApiReferralCodeUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


export type postApiReferralCodeResponse201 = {
  data: null
  status: 201
}
    
export type postApiReferralCodeResponseComposite = postApiReferralCodeResponse201;
    
export type postApiReferralCodeResponse = postApiReferralCodeResponseComposite & {
  headers: Headers;
}

export const getPostApiReferralCodeUrl = () => {


  

  return `/api/referral-code`
}

export const postApiReferralCode = async (postApiReferralCodeBody: PostApiReferralCodeBody, options?: RequestInit): Promise<postApiReferralCodeResponse> => {
  
  return customFetch<postApiReferralCodeResponse>(getPostApiReferralCodeUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      postApiReferralCodeBody,)
  }
);}


export type deleteApiReferralCodeReferralCodeIdResponse204 = {
  data: null
  status: 204
}
    
export type deleteApiReferralCodeReferralCodeIdResponseComposite = deleteApiReferralCodeReferralCodeIdResponse204;
    
export type deleteApiReferralCodeReferralCodeIdResponse = deleteApiReferralCodeReferralCodeIdResponseComposite & {
  headers: Headers;
}

export const getDeleteApiReferralCodeReferralCodeIdUrl = () => {


  

  return `/api/referral-code/:referralCodeId`
}

export const deleteApiReferralCodeReferralCodeId = async ( options?: RequestInit): Promise<deleteApiReferralCodeReferralCodeIdResponse> => {
  
  return customFetch<deleteApiReferralCodeReferralCodeIdResponse>(getDeleteApiReferralCodeReferralCodeIdUrl(),
  {      
    ...options,
    method: 'DELETE'
    
    
  }
);}


