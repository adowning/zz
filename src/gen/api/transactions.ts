/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Tasks API
 * OpenAPI spec version: 0.0.0
 */
import type {
  GetApiTransactionsDepositsId200,
  GetApiTransactionsDepositsId400,
  GetApiTransactionsDepositsId401,
  GetApiTransactionsDepositsId403,
  GetApiTransactionsDepositsId404,
  GetApiTransactionsDepositsId500,
  GetApiTransactionsDepositsTop10200Item,
  GetApiTransactionsDepositsTop10401,
  GetApiTransactionsDepositsTop10500,
  PatchApiTransactionsDepositsIdStatus200,
  PatchApiTransactionsDepositsIdStatus400,
  PatchApiTransactionsDepositsIdStatus401,
  PatchApiTransactionsDepositsIdStatus403,
  PatchApiTransactionsDepositsIdStatus404,
  PatchApiTransactionsDepositsIdStatus500,
  PatchApiTransactionsDepositsIdStatusBody,
  PostApiTransactionsDeposits201,
  PostApiTransactionsDeposits400,
  PostApiTransactionsDeposits401,
  PostApiTransactionsDeposits500,
  PostApiTransactionsDepositsBody
} from '../models';

import { customFetch } from '../../request/index';


/**
 * @summary Get top 10 deposits by user based on most recently created
 */
export type getApiTransactionsDepositsTop10Response200 = {
  data: GetApiTransactionsDepositsTop10200Item[]
  status: 200
}

export type getApiTransactionsDepositsTop10Response401 = {
  data: GetApiTransactionsDepositsTop10401
  status: 401
}

export type getApiTransactionsDepositsTop10Response500 = {
  data: GetApiTransactionsDepositsTop10500
  status: 500
}
    
export type getApiTransactionsDepositsTop10ResponseComposite = getApiTransactionsDepositsTop10Response200 | getApiTransactionsDepositsTop10Response401 | getApiTransactionsDepositsTop10Response500;
    
export type getApiTransactionsDepositsTop10Response = getApiTransactionsDepositsTop10ResponseComposite & {
  headers: Headers;
}

export const getGetApiTransactionsDepositsTop10Url = () => {


  

  return `/api/transactions/deposits/top10`
}

export const getApiTransactionsDepositsTop10 = async ( options?: RequestInit): Promise<getApiTransactionsDepositsTop10Response> => {
  
  return customFetch<getApiTransactionsDepositsTop10Response>(getGetApiTransactionsDepositsTop10Url(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * @summary Create a new deposit
 */
export type postApiTransactionsDepositsResponse201 = {
  data: PostApiTransactionsDeposits201
  status: 201
}

export type postApiTransactionsDepositsResponse400 = {
  data: PostApiTransactionsDeposits400
  status: 400
}

export type postApiTransactionsDepositsResponse401 = {
  data: PostApiTransactionsDeposits401
  status: 401
}

export type postApiTransactionsDepositsResponse500 = {
  data: PostApiTransactionsDeposits500
  status: 500
}
    
export type postApiTransactionsDepositsResponseComposite = postApiTransactionsDepositsResponse201 | postApiTransactionsDepositsResponse400 | postApiTransactionsDepositsResponse401 | postApiTransactionsDepositsResponse500;
    
export type postApiTransactionsDepositsResponse = postApiTransactionsDepositsResponseComposite & {
  headers: Headers;
}

export const getPostApiTransactionsDepositsUrl = () => {


  

  return `/api/transactions/deposits`
}

export const postApiTransactionsDeposits = async (postApiTransactionsDepositsBody: PostApiTransactionsDepositsBody, options?: RequestInit): Promise<postApiTransactionsDepositsResponse> => {
  
  return customFetch<postApiTransactionsDepositsResponse>(getPostApiTransactionsDepositsUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      postApiTransactionsDepositsBody,)
  }
);}


/**
 * @summary Get deposit by ID
 */
export type getApiTransactionsDepositsIdResponse200 = {
  data: GetApiTransactionsDepositsId200
  status: 200
}

export type getApiTransactionsDepositsIdResponse400 = {
  data: GetApiTransactionsDepositsId400
  status: 400
}

export type getApiTransactionsDepositsIdResponse401 = {
  data: GetApiTransactionsDepositsId401
  status: 401
}

export type getApiTransactionsDepositsIdResponse403 = {
  data: GetApiTransactionsDepositsId403
  status: 403
}

export type getApiTransactionsDepositsIdResponse404 = {
  data: GetApiTransactionsDepositsId404
  status: 404
}

export type getApiTransactionsDepositsIdResponse500 = {
  data: GetApiTransactionsDepositsId500
  status: 500
}
    
export type getApiTransactionsDepositsIdResponseComposite = getApiTransactionsDepositsIdResponse200 | getApiTransactionsDepositsIdResponse400 | getApiTransactionsDepositsIdResponse401 | getApiTransactionsDepositsIdResponse403 | getApiTransactionsDepositsIdResponse404 | getApiTransactionsDepositsIdResponse500;
    
export type getApiTransactionsDepositsIdResponse = getApiTransactionsDepositsIdResponseComposite & {
  headers: Headers;
}

export const getGetApiTransactionsDepositsIdUrl = (id: string,) => {


  

  return `/api/transactions/deposits/${id}`
}

export const getApiTransactionsDepositsId = async (id: string, options?: RequestInit): Promise<getApiTransactionsDepositsIdResponse> => {
  
  return customFetch<getApiTransactionsDepositsIdResponse>(getGetApiTransactionsDepositsIdUrl(id),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * @summary Update deposit status
 */
export type patchApiTransactionsDepositsIdStatusResponse200 = {
  data: PatchApiTransactionsDepositsIdStatus200
  status: 200
}

export type patchApiTransactionsDepositsIdStatusResponse400 = {
  data: PatchApiTransactionsDepositsIdStatus400
  status: 400
}

export type patchApiTransactionsDepositsIdStatusResponse401 = {
  data: PatchApiTransactionsDepositsIdStatus401
  status: 401
}

export type patchApiTransactionsDepositsIdStatusResponse403 = {
  data: PatchApiTransactionsDepositsIdStatus403
  status: 403
}

export type patchApiTransactionsDepositsIdStatusResponse404 = {
  data: PatchApiTransactionsDepositsIdStatus404
  status: 404
}

export type patchApiTransactionsDepositsIdStatusResponse500 = {
  data: PatchApiTransactionsDepositsIdStatus500
  status: 500
}
    
export type patchApiTransactionsDepositsIdStatusResponseComposite = patchApiTransactionsDepositsIdStatusResponse200 | patchApiTransactionsDepositsIdStatusResponse400 | patchApiTransactionsDepositsIdStatusResponse401 | patchApiTransactionsDepositsIdStatusResponse403 | patchApiTransactionsDepositsIdStatusResponse404 | patchApiTransactionsDepositsIdStatusResponse500;
    
export type patchApiTransactionsDepositsIdStatusResponse = patchApiTransactionsDepositsIdStatusResponseComposite & {
  headers: Headers;
}

export const getPatchApiTransactionsDepositsIdStatusUrl = (id: string,) => {


  

  return `/api/transactions/deposits/${id}/status`
}

export const patchApiTransactionsDepositsIdStatus = async (id: string,
    patchApiTransactionsDepositsIdStatusBody: PatchApiTransactionsDepositsIdStatusBody, options?: RequestInit): Promise<patchApiTransactionsDepositsIdStatusResponse> => {
  
  return customFetch<patchApiTransactionsDepositsIdStatusResponse>(getPatchApiTransactionsDepositsIdStatusUrl(id),
  {      
    ...options,
    method: 'PATCH',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      patchApiTransactionsDepositsIdStatusBody,)
  }
);}


