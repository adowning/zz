/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Tasks API
 * OpenAPI spec version: 0.0.0
 */
import type {
  GetApiVipLevels200Item,
  GetApiVipMe200,
  GetApiVipRanks200Item
} from '../models';

import { customFetch } from '../../request/index';


/**
 * @summary Get the authenticated user VIP details
 */
export type getApiVipMeResponse200 = {
  data: GetApiVipMe200
  status: 200
}

export type getApiVipMeResponse401 = {
  data: null
  status: 401
}

export type getApiVipMeResponse404 = {
  data: null
  status: 404
}
    
export type getApiVipMeResponseComposite = getApiVipMeResponse200 | getApiVipMeResponse401 | getApiVipMeResponse404;
    
export type getApiVipMeResponse = getApiVipMeResponseComposite & {
  headers: Headers;
}

export const getGetApiVipMeUrl = () => {


  

  return `/api/vip/me`
}

export const getApiVipMe = async ( options?: RequestInit): Promise<getApiVipMeResponse> => {
  
  return customFetch<getApiVipMeResponse>(getGetApiVipMeUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * @summary Get the configuration for all VIP levels
 */
export type getApiVipLevelsResponse200 = {
  data: GetApiVipLevels200Item[]
  status: 200
}
    
export type getApiVipLevelsResponseComposite = getApiVipLevelsResponse200;
    
export type getApiVipLevelsResponse = getApiVipLevelsResponseComposite & {
  headers: Headers;
}

export const getGetApiVipLevelsUrl = () => {


  

  return `/api/vip/levels`
}

export const getApiVipLevels = async ( options?: RequestInit): Promise<getApiVipLevelsResponse> => {
  
  return customFetch<getApiVipLevelsResponse>(getGetApiVipLevelsUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * @summary Get the configuration for all VIP ranks
 */
export type getApiVipRanksResponse200 = {
  data: GetApiVipRanks200Item[]
  status: 200
}
    
export type getApiVipRanksResponseComposite = getApiVipRanksResponse200;
    
export type getApiVipRanksResponse = getApiVipRanksResponseComposite & {
  headers: Headers;
}

export const getGetApiVipRanksUrl = () => {


  

  return `/api/vip/ranks`
}

export const getApiVipRanks = async ( options?: RequestInit): Promise<getApiVipRanksResponse> => {
  
  return customFetch<getApiVipRanksResponse>(getGetApiVipRanksUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


