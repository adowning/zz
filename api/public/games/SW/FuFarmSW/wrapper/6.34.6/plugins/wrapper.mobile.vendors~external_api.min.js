(window.webpackJsonp1588865924768=window.webpackJsonp1588865924768||[]).push([[37],{234:function(t,e,i){"use strict";i.r(e);class s{static afterDecorator(t,e){return function(i){return function(){const s=i.apply(this,arguments);return t.apply(e||this,arguments),s}}}static beforeDecorator(t,e){return function(i){return function(){return t.apply(e||this,arguments),i.apply(this,arguments)}}}static conditionDecorator(t,e,i){return function(s){return function(){if(e&&(e.args=arguments,e.context=this),t.apply(i||this,arguments))return s.apply(this,arguments)}}}static overrideFunction(t,e,i){return t[e]=i(t[e]),t[e]}}const n="ExternalEvent.GAME_API_INITIALIZED",a="ExternalEvent.GAME_LOADING_PROGRESS",o="ExternalEvent.GAME_LOADED",r="ExternalEvent.GAME_LAZY_ASSETS_LOADED",c="ExternalEvent.ROUND_STARTED",h="ExternalEvent.ROUND_ENDED",d="ExternalEvent.PLAY_CLICKED",E="ExternalEvent.REELS_STARTED",p="ExternalEvent.REELS_STOPPED",l="ExternalEvent.TURBO_ON",u="ExternalEvent.TURBO_OFF",S="ExternalEvent.AUTO_PLAY_STARTED",_="ExternalEvent.AUTO_PLAY_STOPPED",A="ExternalEvent.PAYTABLE_OPENED",I="ExternalEvent.PAYTABLE_CLOSED",g="ExternalEvent.BET_CHANGED",T="ExternalEvent.WIN_ANIMATION_STARTED",v="ExternalEvent.WIN_ANIMATION_STOPPED",M="ExternalEvent.JACKPOT_WIN_ANIMATION_STARTED",m="ExternalEvent.JACKPOT_WIN_ANIMATION_STOPPED",x="ExternalEvent.FEATURE_STARTED",C="ExternalEvent.FEATURE_ENDED",D="ExternalEvent.FEATURE_TICKUP_STARTED",N="ExternalEvent.FEATURE_TICKUP_ENDED",P="ExternalEvent.FEATURE_SCREEN_OPENED",L="ExternalEvent.FEATURE_SCREEN_CLOSED",b="ExternalEvent.STOP_BUTTON_CLICKED",O="ExternalEvent.PAUSE_GAME",G="ExternalEvent.UNPAUSE_GAME",R="AnticipationModel",B="EventDispatcher",k="RenderManager",y="UserModel",U="TurboModeModel",f="TurboButtonModel",W="AutoSpinsModel",w="CustomAutoSpinsModel",H="AutoPlayModeModel",K="SpinComponentModel",Y="SoundManager",F="StakesModel",j="SlotModel",q="SlotConfigModel",V="GameDataModel",J="BetHelper",z="ServerService",X="UIModel",Z="FeaturesModel",Q="LoadManager",$="JackpotModel",tt="KeyboardEventManager",et="InternalEvent.SKIP_ANTICIPATION",it="InternalEvent.SERVER_RESPONSE",st="InternalEvent.PAUSE_GAME",nt="InternalEvent.UNPAUSE_GAME",at="init";class ot{constructor(){this.serverServiceBlackList=["WuShiJpServerService"]}initialize(t){this.api=t,this.roundEnded=!0,this.uiModel=this.api.context.getGameClassInstance(X),this.uiModel?this.uiStateChangeEventName="UI_STATE_CHANGE":this.uiStateChangeEventName="CHANGE_UI";const e=this.api.context.getGameClassInstance(z,(t,e)=>t.indexOf(e)>-1&&-1===this.serverServiceBlackList.indexOf(t));e&&e.spin&&(s.overrideFunction(e,"spin",s.beforeDecorator(this.processSpinStart,this)),this.api.addListener(it,this.processResponse,this))}processSpinStart(){this.roundEnded&&(this.roundEnded=!1,this.responseRoundEnded=!1,this.api.removeListener(this.uiStateChangeEventName,this.onUIStateChange,this),this.api.dispatchEvent(c))}processResponse(t){t.result.request===at?(this.roundEnded=this.responseRoundEnded=t.roundEnded,this.roundEnded||this.api.addListener(d,this.onPlayClicked,this)):(this.responseRoundEnded=t.result.roundEnded,!this.roundEnded&&this.responseRoundEnded&&this.api.addListener(this.uiStateChangeEventName,this.onUIStateChange,this))}onPlayClicked(){this.api.removeListener(d,this.onPlayClicked,this),this.api.dispatchEvent(c)}onUIStateChange(t){let e=t;!e&&this.uiModel&&(e=this.uiModel.getState()),e&&this.responseRoundEnded&&e.spin&&e.spin.enabled&&("SpinComponentState.SPIN"===e.spin.mode||"spin"===e.spin.mode||"SpinButtonState.SPIN"===e.spin.mode)&&(this.api.removeListener(this.uiStateChangeEventName,this.onUIStateChange,this),Promise.resolve().then(()=>this.finishRound()))}finishRound(){this.roundEnded=!0,this.api.dispatchEvent(h)}}class rt{initialize(t){this.api=t,window.addEventListener("message",t=>{this.displayMessage(t.data)},!1)}displayMessage(t){switch(t.type){case"updateBalance":this.api.setBalance(t.value);break;case"play":this.api.playButtonClick();break;case"spin":this.api.spin();break;case"pause":this.api.pause();break;case"unpause":this.api.unpause();break;case"10auto":this.api.setAutoSpins(10,!1);break;case"until":this.api.setAutoSpins(0,!0);break;case"resetAuto":this.api.resetAutoSpins();break;case"showPaytable":this.api.showPaytable();break;case"hidePaytable":this.api.hidePaytable();break;case"turboON":this.api.setTurboMode(!0);break;case"turboOff":this.api.setTurboMode(!1);break;case"increaseBet":this.api.increaseBet();break;case"decreaseBet":this.api.decreaseBet();break;case"dispatchEvent":this.api.dispatchEvent(t.value)}}}class ct{initialize(t){if(this.api=t,this.logEventsEnabled){const e=t.context.dispatcher.emit?"emit":"dispatch";s.overrideFunction(t.context.dispatcher,e,s.beforeDecorator(this.logEventData))}}logEventData(){arguments[0]}get logEventsEnabled(){const t=this.api.context.context.api.device.getParams.logExternalEvents;return Boolean(t)}}class ht{constructor(t){if(this.context=t,this.context.kernel&&this.context.kernel.mappingsMap)this.injections=this.context.kernel.mappingsMap.getAll().toArray();else{this.injections=[];const t=this.context.kernel.classMap.map;Object.keys(t).forEach(e=>{this.injections.push(t[e])})}this.context.gameInitSettings?this.gameID=this.context.gameInitSettings.gameSettingsConfig.ID:this.gameID=this.context.slotSettings.slotSettingsData.ID,this.dispatcher=this.getGameClassInstance(B),this.autoSpinsModel=this.getGameClassInstance(W),this.autoPlayModeModel=this.getGameClassInstance(H),this.customAutoSpinsModel=this.getGameClassInstance(w),this.spinComponentModel=this.getGameClassInstance(K),this.userModel=this.getGameClassInstance(y),this.stakesModel=this.getGameClassInstance(F),this.slotModel=this.getGameClassInstance(j),this.slotConfigModel=this.getGameClassInstance(q),this.jackpotModel=this.getGameClassInstance($),this.gameDataModel=this.getGameClassInstance(V),this.betHelper=this.getGameClassInstance(J),this.turboModeModel=this.getGameClassInstance(U),this.turboButtonModel=this.getGameClassInstance(f),this.soundManager=this.getGameClassInstance(Y),this.keyboardEventManager=this.getGameClassInstance(tt),this.renderManager=this.getGameClassInstance(k,(t,e)=>0===t.indexOf(e)),this.renderManager&&(this.renderManager=this.getGameClassInstance(k));const e={isSet:!1,moduleType:"GameTypes.GENERATION_1"};this.dispatcher.dispatch("GameDataRequests.GET_CORE_MODULE_STATE",e),this.gameModuleType=e.moduleType}getGameClassInstance(t,e=this.validate){for(let i=this.injections.length-1;i>=0;i--){const s=this.injections[i];let n=null;if(s.instance?n=s.instance.constructor.name:s.instanceResultConstructor?n=s.instanceResultConstructor.name:s.getConstructor?n=s.getConstructor().name:s.instanceBindedConstructor&&(n=s.instanceBindedConstructor.name),n&&e(n,t))return s.getInstance()}return null}validate(t,e){return t.indexOf(e)>-1}bindGameEventsToExternalEvent(t,e){this.isValid()&&t.forEach(t=>{this.dispatcher.addListener(t,t=>this.redispatchEvent(e,t),this)})}redispatchEvent(t,e){e?this.dispatcher.dispatch(t,e):this.dispatcher.dispatch(t)}isValid(){return!!this.dispatcher}}class dt{constructor(t){if(this.context=t,!this.context)throw new Error("GameDataRequestHandler.context is not provided ")}getBalanceData(){const t={isSet:!1,balance:void 0};return this.context.dispatcher.dispatch("GameDataRequests.GET_BALANCE",t),t}getCurrencyData(){const t={isSet:!1,currency:void 0,currencySymbol:void 0};return this.context.dispatcher.dispatch("GameDataRequests.GET_CURRENCY",t),t}getCoinsData(){const t={isSet:!1,coinValue:NaN,availableCoins:null,currentBetsIndex:NaN};return this.context.dispatcher.dispatch("GameDataRequests.GET_COINS_STATE",t),t}getTotalBetData(){const t={isSet:!1,totalBet:NaN};return this.context.dispatcher.dispatch("GameDataRequests.GET_TOTAL_BET",t),t}getTotalWinData(){const t={isSet:!1,totalWin:NaN};return this.context.dispatcher.dispatch("GameDataRequests.GET_TOTAL_WIN",t),t}getGameModeState(){const t={isSet:!1,modes:null,isUntilFeature:!1,autoSpinsNumber:NaN};return this.context.dispatcher.dispatch("GameDataRequests.GET_GAME_MODE_STATE",t),t}}class Et{constructor(t){if(this.context=t,!this.context)throw new Error("GameInstructionIntentManager.context is not provided");this.isDisabled="GameTypes.GENERATION_2"!==this.context.gameModuleType}unpause(){this.isDisabled||(this.context.dispatcher.dispatch("InstructionIntent.RESUME_GAME"),this.context.dispatcher.dispatch(G))}pause(){this.isDisabled||(this.context.dispatcher.dispatch("InstructionIntent.PAUSE_GAME"),this.context.dispatcher.dispatch(O))}enableAudio(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.ENABLE_AUDIO")}disableAudio(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.DISABLE_AUDIO")}showPaytable(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.SHOW_PAY_TABLE")}hidePaytable(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.HIDE_PAY_TABLE")}setBalance(t){if(this.isDisabled)return;const e={balance:t};this.context.dispatcher.dispatch("InstructionIntent.SET_BALANCE",e)}playButtonClick(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.PLAY_BUTTON_CLICK")}increaseBet(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.INCREASE_BET")}decreaseBet(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.DECREASE_BET")}setMaxBet(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.SET_MAX_BET")}setMinBet(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.SET_MIN_BET")}setTurboMode(t){this.isDisabled||(t?this.context.dispatcher.dispatch("InstructionIntent.ENABLE_TURBO"):this.context.dispatcher.dispatch("InstructionIntent.DISABLE_TURBO"))}setAutoSpins(t,e){if(this.isDisabled)return;const i={amount:t,isUntilFeature:e};this.context.dispatcher.dispatch("InstructionIntent.ENABLE_AUTOSPIN",i)}resetAutoSpins(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.DISABLE_AUTOSPIN")}spin(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.START_SPIN")}stopSpin(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.STOP_SPIN")}skipAnticipation(){this.isDisabled||this.context.dispatcher.dispatch("InstructionIntent.SKIP_ANTICIPATION")}}class pt{constructor(t){this._isGameLoaded=!1,this.context=t,this.gameDataRequestHandler=new dt(this.context),this.gameInstructionsManager=new Et(this.context),this.addListener(o,this.onGameLoaded,this)}isGameLoaded(){return this._isGameLoaded}pause(){this.gameInstructionsManager.isDisabled?this.dispatchEvent(st):this.gameInstructionsManager.pause()}unpause(){this.gameInstructionsManager.isDisabled?this.dispatchEvent(nt):this.gameInstructionsManager.unpause()}disableAudio(){this.gameInstructionsManager.isDisabled?(this.context.dispatcher.dispatch("MUTE",!0),this.context.soundManager.setSoundsMute&&this.context.soundManager.setSoundsMute(!0)):this.gameInstructionsManager.disableAudio()}enableAudio(){this.gameInstructionsManager.isDisabled?(this.context.dispatcher.dispatch("MUTE",!1),this.context.soundManager.setSoundsMute&&this.context.soundManager.setSoundsMute(!1)):this.gameInstructionsManager.enableAudio()}playButtonClick(){this.gameInstructionsManager.isDisabled?(this.context.dispatcher.dispatch("CommonEvent.PLAY_CLICK"),this.context.dispatcher.dispatch("Event.PLAY_CLICK"),this.context.dispatcher.dispatch("PLAY_CLICK"),this.context.dispatcher.dispatch("playBtn_clicked_mediator")):this.gameInstructionsManager.playButtonClick()}showPaytable(){this.gameInstructionsManager.isDisabled?(this.context.dispatcher.dispatch("SHOW_PAYTABLE"),this.context.dispatcher.dispatch("GameRunEvents.SHOW_PAYTABLE","paytable_group"),this.context.dispatcher.dispatch("UIControlsEvent.INFO_BUTTON_CLICK")):this.gameInstructionsManager.showPaytable()}hidePaytable(){this.gameInstructionsManager.isDisabled?(this.context.dispatcher.dispatch("HIDE_PAYTABLE"),this.context.dispatcher.dispatch("GameRunEvents.HIDE_PAYTABLE"),this.context.dispatcher.dispatch("MainSceneEvents.HIDE_PAYTABLE"),this.context.dispatcher.dispatch("PaytableEvents.HIDE_PAYTABLE")):this.gameInstructionsManager.hidePaytable()}setBalance(t){this.gameInstructionsManager.isDisabled?(this.context.userModel.balance=t,this.context.context.updateViewBalance?this.context.context.updateViewBalance(t):this.context.dispatcher.dispatch("UPDATE_VIEW_BALANCE",t)):this.gameInstructionsManager.setBalance(t)}getBalance(){const t=this.gameDataRequestHandler.getBalanceData();return t.isSet?t.balance:this.context.userModel.balance}getCurrency(){const t=this.gameDataRequestHandler.getCurrencyData();return t.isSet?t.currency:this.context.userModel.currency}getCurrencySymbol(){const t=this.gameDataRequestHandler.getCurrencyData();return t.isSet?t.currencySymbol:this.context.userModel.currencySign}increaseBet(){this.gameInstructionsManager.isDisabled?this.context.stakesModel.increaseStake():this.gameInstructionsManager.increaseBet()}decreaseBet(){this.gameInstructionsManager.isDisabled?this.context.stakesModel.decreaseStake():this.gameInstructionsManager.decreaseBet()}setMaxBet(){this.gameInstructionsManager.isDisabled?(this.context.stakesModel.currentStakeIndex=this.context.stakesModel.stakes.length-1,this.context.stakesModel.increaseStake()):this.gameInstructionsManager.setMaxBet()}setMinBet(){this.gameInstructionsManager.isDisabled?(this.context.stakesModel.currentStakeIndex=0,this.context.stakesModel.decreaseStake()):this.gameInstructionsManager.setMinBet()}getCoinValue(){const t=this.gameDataRequestHandler.getCoinsData();return t.isSet?t.coinValue:this.context.stakesModel.currentStakeValue}getAvailableCoins(){const t=this.gameDataRequestHandler.getCoinsData();return t.isSet?t.availableCoins:this.context.stakesModel.stakes}getCurrentBetsIndex(){const t=this.gameDataRequestHandler.getCoinsData();return t.isSet?t.currentBetsIndex:this.context.stakesModel.currentStakeIndex}getTotalBet(){const t=this.gameDataRequestHandler.getTotalBetData();return t.isSet?t.totalBet:this.context.betHelper?this.context.betHelper.getTotalBet():this.context.stakesModel.getTotalBet()}dispatchEvent(t,e){this.context&&this.context.dispatcher&&this.context.dispatcher.dispatch(t,e)}addListener(t,e,i){return this.context&&this.context.dispatcher&&this.context.dispatcher.addListener(t,e,i),this}addListenerOnce(t,e,i){return this.context&&this.context.dispatcher&&(this.context.dispatcher.once?this.context.dispatcher.once(t,e,i):this.context.dispatcher.addListener(t,e,i).once()),this}removeListener(t,e,i){return this.context&&this.context.dispatcher&&this.context.dispatcher.removeListener(t,e,i),this}getTotalWin(){const t=this.gameDataRequestHandler.getTotalWinData();return t.isSet?t.totalWin:this.context&&this.context.gameDataModel?this.context.gameDataModel.totalWinning:-1}getJackpotWin(){return this.context&&this.context.jackpotModel?this.context.jackpotModel.jackpotWinValue:0}isJackpotJustWon(){return!(!this.context||!this.context.jackpotModel)&&this.context.jackpotModel.isJustWon}onGameLoaded(){this.removeListener(o,this.onGameLoaded,this),this._isGameLoaded=!0}getElementById(t,e){if(e||(e=this.context.renderManager.objectToRender),e.id===t||e.name===t)return e;let i=null;if(e.children&&e.children.length>0){const s=e.children.length;for(let n=0;n<s&&(i=this.getElementById(t,e.children[n]),!i);n++);}return i}}class lt extends pt{constructor(){super(...arguments),this.autoSpinStartTimeout=500}setAutoSpins(t,e){this.gameInstructionsManager.isDisabled?(this.clearAutoSpinWaiting(),this.addListener(E,this.onSpinStarted,this),this.autoSpinStartTimeoutID=window.setTimeout(()=>{this.dispatchEvent("READY_TO_SPIN"),this.dispatchEvent("BottomBarEvent.READY_TO_SPIN"),this.autoSpinStartTimeoutID=window.setTimeout(()=>{this.clearAutoSpinWaiting(),this.dispatchEvent("SPIN_CLICK"),this.dispatchEvent("BottomBarEvent.SPIN_CLICK")},this.autoSpinStartTimeout)},this.autoSpinStartTimeout),this.context.autoSpinsModel.activate(t,e)):this.gameInstructionsManager.setAutoSpins(t,e)}clearAutoSpinWaiting(){this.removeListener(E,this.onSpinStarted,this),window.clearTimeout(this.autoSpinStartTimeoutID)}onSpinStarted(){this.clearAutoSpinWaiting()}resetAutoSpins(){this.gameInstructionsManager.isDisabled?(this.clearAutoSpinWaiting(),this.isAutoSpinsActive()&&(this.context.autoSpinsModel.deactivate(),this.context.dispatcher.dispatch("BottomBarEvent.STOP_AUTO_SPINS_CLICK"),this.context.dispatcher.dispatch("STOP_AUTO_SPINS_CLICK")),this.isCustomAutoplayActive()&&(this.context.customAutoSpinsModel.isAutoSpinsActive=!1)):this.gameInstructionsManager.resetAutoSpins()}getTotalBetDefaultStake(){const t=this.context.stakesModel,e=this.context.slotModel,i=this.context.betHelper;if(i){const e=i.getTotalBet()/t.currentStakeValue;return t.stakeDefault*e}{const i=t.anteBetCoinsCount?t.stakeDefault*t.anteBetCoinsCount:0,s=t.totalBetMultiplier>1?t.totalBetMultiplier:e.paylineCount;return t.stakeDefault*t.currentCoinsValue*s+i}}spin(){this.gameInstructionsManager.isDisabled?(this.context.dispatcher.dispatch("SPIN_CLICK"),this.context.dispatcher.dispatch("READY_TO_SPIN"),this.context.dispatcher.dispatch("BottomBarEvent.SPIN_CLICK"),this.context.dispatcher.dispatch("BottomBarEvent.READY_TO_SPIN"),this.context.dispatcher.dispatch("UIControlsEvent.SPIN_START_REQUESTED"),this.context.dispatcher.dispatch("UIControlsEvent.SPIN_COMPONENT_PRESSED"),this.context.dispatcher.dispatch("UIControlsEvent.SPIN_COMPONENT_RELEASED")):this.gameInstructionsManager.spin()}setTurboMode(t){this.gameInstructionsManager.isDisabled?(this.context.turboButtonModel&&(this.context.turboButtonModel.isOn=t),this.context.turboModeModel.canBeActive=t):this.gameInstructionsManager.setTurboMode(t)}skipAnticipation(){this.gameInstructionsManager.isDisabled?this.context.dispatcher.dispatch(et):this.gameInstructionsManager.skipAnticipation()}getTurboMode(){const t=this.gameDataRequestHandler.getGameModeState();return t.isSet?t.modes.some(t=>"GameModesList.TURBO"===t||"GameModesList.TURBO_PLUS"===t):this.context.turboButtonModel?this.context.turboButtonModel.isOn:this.context.turboModeModel.isActive}getAutoSpinsNumber(){const t=this.gameDataRequestHandler.getGameModeState();return t.isSet?t.autoSpinsNumber:this.context.autoSpinsModel.autoSpinsCount}isUntilFeature(){const t=this.gameDataRequestHandler.getGameModeState();return t.isSet?t.isUntilFeature:this.context.autoSpinsModel.isUntilFeature}isAutoSpinsActive(){const t=this.gameDataRequestHandler.getGameModeState();return t.isSet?t.modes.some(t=>"GameModesList.AUTO_SPIN_MODE"===t):!!(this.context.autoSpinsModel.isActive||this.context.autoPlayModeModel&&this.context.autoPlayModeModel.checkIfAutoSpinActive&&this.context.autoPlayModeModel.checkIfAutoSpinActive())}isContinuousSpinsActive(){const t=this.gameDataRequestHandler.getGameModeState();return t.isSet?t.modes.some(t=>"GameModesList.CONTINUES_SPIN"===t):!(!this.context.spinComponentModel||!this.context.spinComponentModel.isContinuousSpin)}isCustomAutoplayActive(){return!(!this.context.customAutoSpinsModel||!this.context.customAutoSpinsModel.isAutoSpinsActive)}}class ut extends pt{constructor(t){super(t)}}class St extends pt{constructor(t){super(t)}}class _t{initialize(t){this.api=t,this.bindLoadingEvents(),this.bindPlayButtonClickEvents(),this.bindReelsEvents(),this.bindTurboModeEvents(),this.bindAutoPlayModeEvents(),this.bindPaytableEvents(),this.bindStakeChangeEvents(),this.bindWinAnimationEvents(),this.bindJackpotEvents(),this.bindStopButtonEvents()}bindLoadingEvents(){this.api.context.bindGameEventsToExternalEvent(["CommonEvent.GAME_LOADING","Event.GAME_LOADING","GAME_LOADING"],a),this.api.context.bindGameEventsToExternalEvent(["CommonEvent.GAME_LOADED","Event.GAME_LOADED","GAME_LOADED"],o);const t=this.api.context.getGameClassInstance(Q);if(t&&void 0!==t.onLazyAssetsLoaded)t.onLazyAssetsLoaded.then(()=>{this.api.dispatchEvent(r)});else{const t=()=>{this.api.removeListener(o,t,this),this.api.dispatchEvent(r)};this.api.addListener(o,t,this)}}bindPlayButtonClickEvents(){this.api.context.bindGameEventsToExternalEvent(["CommonEvent.PLAY_CLICK","Event.PLAY_CLICK","PLAY_CLICK","playBtn_clicked_mediator"],d)}bindReelsEvents(){this.api.context.bindGameEventsToExternalEvent(["SlotEvent.REELS_SPIN_STARTED","Event.REELS_SPIN_STARTED","REELS_SPIN_STARTED","RespinEvent.REELS_SPIN_STARTED"],E),this.api.context.bindGameEventsToExternalEvent(["SlotEvent.REELS_SPIN_STOPPED","Event.REELS_SPIN_STOPPED","REELS_SPIN_STOPPED","RespinEvent.REELS_SPIN_STOPPED"],p)}bindTurboModeEvents(){this.api.addListener("TURBO_MODE_CHANGE",()=>{this.api.getTurboMode()?this.api.dispatchEvent(l):this.api.dispatchEvent(u)},this)}bindAutoPlayModeEvents(){this.api.context.bindGameEventsToExternalEvent(["AUTO_SPINS_ACTIVATE"],S),this.api.context.bindGameEventsToExternalEvent(["AUTO_SPINS_DEACTIVATE"],_),this.api.addListener("AUTO_SPINS_STATE_CHANGE",t=>{void 0!==t&&"number"==typeof t&&(0===t?this.api.dispatchEvent(S):this.api.dispatchEvent(_))},this),this.api.addListener("Mark4AutoSpinsModelEvent.AUTO_SPINS_STATE_CHANGE",t=>{switch(t){case"AutoSpinsChangeStateReason.ACTIVATING":this.api.dispatchEvent(S);break;case"AutoSpinsChangeStateReason.DEACTIVATING":case"AutoSpinsChangeStateReason.DEACTIVATED_BY_COUNTER":this.api.dispatchEvent(_)}},this)}bindPaytableEvents(){this.api.context.bindGameEventsToExternalEvent(["GameRunEvents.PAYTABLE_SHOWN","PaytableEvents.PAYTABLE_SHOWN","PAYTABLE_SHOWN","paytableOpen","PAYTABLE_OPENED"],A),this.api.context.bindGameEventsToExternalEvent(["GameRunEvents.PAYTABLE_HIDDEN","PaytableEvents.PAYTABLE_HIDDEN","PAYTABLE_HIDDEN","paytableClose","PAYTABLE_CLOSED"],I),this.api.addListener("PayTableModelEvents.PAYTABLE_VISIBILITY_CHANGE",t=>{!0===t?this.api.dispatchEvent(A):this.api.dispatchEvent(I)},this)}bindStakeChangeEvents(){this.api.addListener("STAKES_CHANGE",()=>{this.api.dispatchEvent(g,this.api.getTotalBet())},this),this.api.addListener("StakesModelEvent.STAKES_CHANGE",()=>{this.api.dispatchEvent(g,this.api.getTotalBet())},this)}bindWinAnimationEvents(){this.api.context.bindGameEventsToExternalEvent(["TICKUP_STARTED","BIG_WIN_INIT_ANIMATION","BigWinEvents.BIG_WIN_INIT_ANIMATION","WinBoxEvents.SHOW_WIN_AMOUNT","Mark4WinBoxEvents.SHOW_WIN_AMOUNT","WinBoxEvent.TICKUP_STARTED","SHOW_WIN_AMOUNT"],T),this.api.context.bindGameEventsToExternalEvent(["TICKUP_ENDED","BIG_WIN_ANIMATION_COMPLETE","BigWinEvents.BIG_WIN_ANIMATION_COMPLETE","Mark4WinBoxEvents.WIN_TICKUP_COMPLETE","WinBoxEvent.WIN_TICKUP_COMPLETE","WinBoxEvents.WIN_TICKUP_COMPLETE","WinBoxEvents.SKIP_WIN_ANIMATION_COMPLETE","Mark4WinBoxEvents.SKIP_WIN_ANIMATION_COMPLETE","WinBoxEvent.TICKUP_ENDED","COUNT_UP_COMPLETE"],v)}bindJackpotEvents(){this.api.context.bindGameEventsToExternalEvent(["JackpotEvent.WIN_ANIMATION_STARTED"],M),this.api.context.bindGameEventsToExternalEvent(["JackpotEvent.WIN_ANIMATION_STOPPED"],m)}bindStopButtonEvents(){this.api.context.bindGameEventsToExternalEvent(["Intent.STOP_SPIN","STOP_CLICK","BottomBarEvent.STOP_CLICK","UIControlsEvent.SPIN_STOP_REQUESTED"],b)}}const At="BigWinEvents.BIG_WIN_HAS_BEEN_WON_ANALYTICS",It="BigWinEvents.BIG_WIN_HAS_BEEN_SKIPPED_ANALYTICS",gt="BigWinEvents.MEGA_WIN_HAS_BEEN_WON_ANALYTICS",Tt="BigWinEvents.MEGA_WIN_HAS_BEEN_SKIPPED_ANALYTICS";class vt{initialize(t){[At,It,gt,Tt].forEach(e=>{t.addListener(e,()=>t.wrapperAPI.addToAnalyticsLog(e))})}}class Mt{initialize(t){this.api=t,this.anticipationModel=this.api.context.getGameClassInstance(R),this.api.addListener(et,this.skipAnticipation,this)}skipAnticipation(){let t;if(this.api.context.context.slotParameters)t=this.api.context.context.slotParameters;else if(this.api.context.slotModel.getSlotConfig)t=this.api.context.slotModel.getSlotConfig();else{if(!this.api.context.slotConfigModel.getSlotConfig)return;t=this.api.context.slotConfigModel.getSlotConfig()}t.anticipation&&t.anticipation.symbols&&this.anticipationModel&&this.anticipationModel.anticipationConfig&&(this.anticipationConfig=this.copyObject(this.anticipationModel.anticipationConfig),this.anticipationModel.anticipationConfig.symbols={},this.anticipationModel.anticipationConfig.animation.time=1e-6,this.anticipationModel.anticipationConfig.animation.turboTime=1e-6,this.api.addListener(h,this.roundEndedHandler,this))}roundEndedHandler(){this.api.removeListener(h,this.roundEndedHandler),this.anticipationModel&&this.anticipationModel.anticipationConfig&&(this.anticipationModel.anticipationConfig.symbols=this.copyObject(this.anticipationConfig.symbols),this.anticipationModel.anticipationConfig.animation=this.copyObject(this.anticipationConfig.animation))}copyObject(t){return JSON.parse(JSON.stringify(t))}}class mt{constructor(){this.featureInProgress=!1}initialize(t){this.api=t,this.featuresModel=this.api.context.getGameClassInstance(Z,this.validateFeaturesModel),this.api.addListener(it,this.processResponse,this),this.api.addListener("FeatureEvent.USER_ACTION_LOCK_CHANGE",this.onUserActionLockChanged,this)}validateFeaturesModel(t,e){return t.indexOf(e)>-1&&-1===t.indexOf("Action")}onUserActionLockChanged(){this.featuresModel.isFeatureJustWon&&this.featuresModel.isUserActionLocked&&this.handleFeatureStart()}processResponse(t){this.api.removeListener(it,this.processResponse,this),t.result.request!==at||t.roundEnded||this.api.addListener(d,this.onPlayClicked,this)}onPlayClicked(){this.api.removeListener(d,this.onPlayClicked,this),this.handleFeatureStart()}handleFeatureStart(){this.featureInProgress||(this.featureInProgress=!0,this.api.dispatchEvent(x),this.api.addListener(h,this.onRoundEnded,this))}onRoundEnded(){this.featureInProgress=!1,this.api.removeListener(h,this.onRoundEnded,this),this.api.dispatchEvent(C)}}class xt{initialize(t){this.api=t;const e=this.api.context.getGameClassInstance(z);e&&s.overrideFunction(e,"processResponse",s.beforeDecorator(this.processResponse,this))}processResponse(){const t=arguments[0];this.api.dispatchEvent(it,t)}}class Ct{constructor(){this.winAnimationFallbackDelay=200}initialize(t){this.api=t,this.api.addListener(T,this.onWinAnimationStarted,this)}onWinAnimationStarted(t){!this.isWaitForAnimationStop&&t&&t.time&&t.time>0&&(this.isWaitForAnimationStop=!0,this.api.addListenerOnce(v,this.onWinAnimationStopped,this),this.winAnimationTimeoutID=window.setTimeout(()=>{this.api.dispatchEvent(v),this.api.removeListener(v,this.onWinAnimationStopped,this)},1e3*t.time+this.winAnimationFallbackDelay))}onWinAnimationStopped(){this.isWaitForAnimationStop=!1,window.clearTimeout(this.winAnimationTimeoutID)}}class Dt{constructor(){this._defaultPauseConfig={stopRendering:!1,muteAudio:!0,lockUI:!0},this._isPaused=!1,this._currentPauseConfig=this._defaultPauseConfig,this._waitActionsNames=["CollapsingWaitSpinAction","WaitSpinAction"],this._overrideFunctions=[]}initialize(t){this._api=t,this._context=t.context,this._api.addListenerOnce(o,this.onGameLoaded,this)}isNotPaused(){return!this._isPaused}onGameLoaded(){this._waitActionsNames.forEach(t=>{const e=this._context.getGameClassInstance(t);if(e){const t={args:null,context:null},i=s.overrideFunction(e.constructor.prototype,"startWithCheck",s.conditionDecorator(this.isNotPaused,t,this));i&&this._overrideFunctions.push({checkMethod:i,argsHolder:t})}}),this._overrideFunctions.length,this._context.keyboardEventManager&&(s.overrideFunction(this._context.keyboardEventManager,"onKeyboardEvent",s.conditionDecorator(this.isNotPaused,null,this)),s.overrideFunction(this._context.keyboardEventManager,"onKeyDown",s.conditionDecorator(this.isNotPaused,null,this)),s.overrideFunction(this._context.keyboardEventManager,"onKeyUp",s.conditionDecorator(this.isNotPaused,null,this)),s.overrideFunction(this._context.keyboardEventManager,"onKeyDownMark2",s.conditionDecorator(this.isNotPaused,null,this)),s.overrideFunction(this._context.keyboardEventManager,"onKeyUpMark2",s.conditionDecorator(this.isNotPaused,null,this))),this._api.addListener(st,this.onPauseGame,this),this._api.addListener(nt,this.onUnpauseGame,this)}onPauseGame(t){this._isPaused||(this._isPaused=!0,this._currentPauseConfig=t||this._defaultPauseConfig,this._currentPauseConfig.muteAudio&&this._api.disableAudio(),this.lockUI(),this.stopRendering(),this._overrideFunctions.forEach(t=>{t.argsHolder.args=null,t.argsHolder.context=null}),this._context.dispatcher.dispatch(O))}onUnpauseGame(){this._isPaused&&(this._isPaused=!1,this._currentPauseConfig.muteAudio&&this._api.enableAudio(),this.unlockUI(),this.startRendering(),this._overrideFunctions.forEach(t=>{t.argsHolder.args&&(t.checkMethod.apply(t.argsHolder.context,t.argsHolder.args),t.argsHolder.args=null,t.argsHolder.context=null)}),this._context.dispatcher.dispatch(G))}lockUI(){this._context.renderManager.objectToRender&&this._currentPauseConfig.lockUI&&(this._context.renderManager.objectToRender.interactiveChildren=!1,this._context.renderManager.objectToRender.interactive=!1,this._context.renderManager.getCanvasElement().style.pointerEvents="none")}unlockUI(){this._context.renderManager.objectToRender&&this._currentPauseConfig.lockUI&&(this._context.renderManager.objectToRender.interactiveChildren=!0,this._context.renderManager.objectToRender.interactive=!0,this._context.renderManager.getCanvasElement().style.pointerEvents="")}stopRendering(){this._currentPauseConfig.stopRendering&&this._context.renderManager.objectToRender&&(this._context.ticker.stop(),this._context.pausedRenderObject=this._context.renderManager.objectToRender,this._context.renderManager.objectToRender=null)}startRendering(){this._currentPauseConfig.stopRendering&&this._context.renderManager.objectToRender&&(this._context.ticker.start(),this._context.renderManager.objectToRender=this._context.pausedRenderObject)}}class Nt{initialize(t){this.api=t,this.addGameStateListeners()}addGameStateListeners(){this.api.addListener("GameStateEvents.SERVER_RESPONDED",t=>{t&&this.api.dispatchEvent(it,t)}),this.api.addListener("GameStateEvents.GAME_LOADING_PROGRESS",t=>{this.api.dispatchEvent(a,t)}),this.api.addListener("GameStateEvents.GAME_LOADED",()=>{this.api.dispatchEvent(o)}),this.api.addListener("GameStateEvents.GAME_LAZY_ASSETS_LOADED",()=>{this.api.dispatchEvent(r)}),this.api.addListener("GameStateEvents.ENTER_GAME",()=>{this.api.dispatchEvent(d)}),this.api.addListener("GameStateEvents.REELS_STARTED",()=>{this.api.dispatchEvent(E)}),this.api.addListener("GameStateEvents.REELS_STOPPED",()=>{this.api.dispatchEvent(p)}),this.api.addListener("GameStateEvents.REELS_STOPPED_MANUALLY",()=>{this.api.dispatchEvent(b)}),this.api.addListener("GameStateEvents.PAY_TABLE_OPENED",()=>{this.api.dispatchEvent(A)}),this.api.addListener("GameStateEvents.PAY_TABLE_CLOSED",()=>{this.api.dispatchEvent(I)}),this.api.addListener("GameStateEvents.GAME_BET_CHANGED",()=>{this.api.dispatchEvent(g,this.api.getTotalBet())}),this.api.addListener("GameStateEvents.WIN_ANIMATION_STARTED",()=>{this.api.dispatchEvent(T)}),this.api.addListener("GameStateEvents.WIN_ANIMATION_STOPPED",()=>{this.api.dispatchEvent(v)}),this.api.addListener("GameStateEvents.ROUND_STARTED",()=>{this.api.dispatchEvent(c)}),this.api.addListener("GameStateEvents.ROUND_ENDED",()=>{this.api.dispatchEvent(h)}),this.api.addListener("GameStateEvents.JACKPOT_WIN_ANIMATION_STARTED",()=>{this.api.dispatchEvent(M)}),this.api.addListener("GameStateEvents.JACKPOT_WIN_ANIMATION_STOPPED",()=>{this.api.dispatchEvent(m)}),this.api.addListener("GameStateEvents.FEATURE_STARTED",t=>{this.api.dispatchEvent(x,t)}),this.api.addListener("GameStateEvents.FEATURE_ENDED",t=>{this.api.dispatchEvent(C,t)}),this.api.addListener("GameStateEvents.FEATURE_TICKUP_STARTED",t=>{this.api.dispatchEvent(D,t)}),this.api.addListener("GameStateEvents.FEATURE_TICKUP_ENDED",t=>{this.api.dispatchEvent(N,t)}),this.api.addListener("GameStateEvents.FEATURE_SCREEN_OPENED",t=>{this.api.dispatchEvent(P,t)}),this.api.addListener("GameStateEvents.FEATURE_SCREEN_CLOSED",t=>{this.api.dispatchEvent(L,t)}),this.api.addListener("GameStateEvents.GAME_MODE_CHANGED",t=>{"GameModesList.TURBO"===t?this.api.getTurboMode()?this.api.dispatchEvent(l):this.api.dispatchEvent(u):"GameModesList.AUTO_SPIN_MODE"===t&&(this.api.isAutoSpinsActive()?this.api.dispatchEvent(S):this.api.dispatchEvent(_))})}}i.d(e,"ExternalAPI",(function(){return Pt}));class Pt{static initialize(t,e,i="SLOT"){const s=class{static create(t,e){const i=new ht(t);switch(i.gameType=e,e){case"SLOT":return new lt(i);case"CARD":return new ut(i);case"TABLE":return new St(i);default:return new pt(i)}}}.create(t,i),a=Pt.windowScope;if(s.context.ticker=e,s.context.isValid()){a[Pt.GAME_API_KEY]=s,Pt.addModules(s),Pt.MODULES.forEach(t=>t.initialize(s)),(a===window?window:a.parent).postMessage(n,"*")}}static addModules(t){"GameTypes.GENERATION_2"===t.context.gameModuleType?Pt.registerModule(new Nt):(Pt.registerModule(new Nt),Pt.registerModule(new xt),Pt.registerModule(new ot),Pt.registerModule(new _t),Pt.registerModule(new Ct),Pt.registerModule(new vt),Pt.registerModule(new Dt),Pt.registerModule(new Mt),Pt.registerModule(new mt),Pt.registerModule(new rt,!0),Pt.registerModule(new ct,!0))}static registerModule(t,e=!1){e||Pt.MODULES.push(t)}}Pt.GAME_API_KEY="GameAPI",Pt.SW_CONTEXT_KEY="swContext",Pt.windowScope=window,Pt.MODULES=[];const Lt=Date.now(),bt=window.setInterval(()=>{const t=Pt.windowScope[Pt.SW_CONTEXT_KEY];t?(clearInterval(bt),Pt.initialize(t.context,t.PIXI.ticker.shared,t.gameType||"SLOT")):Date.now()-Lt>3e5&&clearInterval(bt)},100)}}]);